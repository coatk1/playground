name: Publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch.
on:

  release:
    types:
      - published
      - edited
      - prereleased

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:

  # Publish to PYPI
  publish:
    name: Publish

    # Configure across different platforms.
    strategy:
      matrix:

        # Linux
        os: [ubuntu-latest]

        # Python versions
        python-version: [3.7]

    # The type of runner that the job will run on.
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    # Using actions/checkout get code from repo.
    - name: GitHub Checks
      uses: actions/checkout@v2

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    # Build Source Distribution.
    - name: Build source distribution
      run: python setup.py sdist bdist_wheel

    # Upload Source Distribution to GitHub Actions.
    - name: Upload source distribution
      uses: actions/upload-artifact@master
      with:
        name: source-dist
        path: dist

    # Download Source Distribution from GitHub Actions.
    - name: Download dist
      uses: actions/download-artifact@master
      with:
        name: source-dist
        path: dist

    # Publish to PYPI.
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        # packages_dir: custom-dir/

    # Publish to Anaconda Cloud.
    #- name: Upload to Anaconda
    #  uses: fcakyon/conda-publish-action@v1.3
    #  with:
    #    subdir: 'conda'
    #    anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
    #    platforms: 'win'

  # Publish to Anaconda
  publish_2:
  #  name: Anaconda

    # Needs the build step to pass.
    needs: publish

    # Configure across different platforms.
    strategy:
      matrix:

        # Windows
        os: [windows-latest]

        # Python versions
        python-version: [3.7]

    # The type of runner that the job will run on.
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    # Using actions/checkout get code from repo.
    - name: GitHub Checks
      uses: actions/checkout@v2

    # Setup Anaconda and Python Version.
    # setuptools and wheel come with Anaconda.
    - name: Set up Anaconda and Python
      uses: goanpeca/setup-miniconda@v1
      with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

    # Install dependencies. Installs must be on separate lines.
    - name: Install dependencies
      run: |
        conda install anaconda-client
        conda install conda-build

    # Download Source Distribution from GitHub Actions.
    - name: Download dist
      uses: actions/download-artifact@master
      with:
        name: source-dist
        path: dist

    # Publish to Anaconda Cloud. Need to add GitHub Secret.
    - name: Login to Anaconda
      #with:
      #  anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
    #- name: Upload to Anaconda
      run: |
        # PYPI package
        #python setup.py sdist
        # Anaconda package
        #conda config --set anaconda_upload no
        #conda build . --output
        anaconda login
        anaconda upload --skip-existing dist/*.tar.gz
      #with:
      #  anacondatoken: ${{ secrets.ANACONDA_TOKEN }}
